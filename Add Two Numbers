/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry = 0;
        
        ListNode* dummy = new ListNode(-1);
        ListNode* cur   = dummy;

        while(l1 != NULL || l2 != NULL || carry != 0){
            int val1 = l1 != NULL ? l1 -> val : 0;
            int val2 = l2 != NULL ? l2 -> val : 0;

            int curSum = val1 + val2 + carry;
            carry = curSum / 10;
            cur -> next = new ListNode(curSum % 10);
            cur = cur -> next;

            if(l1 != NULL) l1 = l1 -> next;
            if(l2 != NULL) l2 = l2 -> next;
        }

        ListNode* result = dummy -> next;
        dummy -> next = NULL;
        delete dummy;

        return result;
    }
};
