/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int idx = 0;

    TreeNode* createBSTFromPreorder(vector<int>& preorder, int lowerBound, int upperBound){
        if(idx >= preorder.size() || preorder[idx] < lowerBound || preorder[idx] > upperBound){
            return NULL;
        }

        int nodeVal = preorder[idx];
        idx++;
        TreeNode* root = new TreeNode(nodeVal);

        root -> left = createBSTFromPreorder(preorder, lowerBound, nodeVal);
        root -> right = createBSTFromPreorder(preorder, nodeVal, upperBound);

        return root;
    }

    TreeNode* bstFromPreorder(vector<int>& preorder) {
        return createBSTFromPreorder(preorder, INT_MIN, INT_MAX);
    }
};

// TC : O(N)
// SC : O(N)
