class Solution {
public:
    vector<int> replaceNonCoprimes(vector<int>& nums) {
        vector<int> result; // or you can use a stack too
        
        // Processing left to right
        for(int num : nums) {

            while(!result.empty()) {
                int prev = result.back();
                int curr = num;

                int GCD = gcd(prev, curr);

                if(GCD == 1) 
                    break;
                
                result.pop_back();

                int LCM = prev / GCD * curr;

                num = LCM; // merged number
            }

            result.push_back(num); // merged number is entered here
        } 

        return result;
    }
};

// We touched a number twice -> 2 * n
// GCD -> log(min(x, y))

// TC : O(n * GCD)
// SC : O(1) // exculuding the result array
