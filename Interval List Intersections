class Solution {
public:
    vector<vector<int>> intervalIntersection(vector<vector<int>>& firstList, vector<vector<int>>& secondList) {
        int i = 0; // first list
        int j = 0; // second list

        int m = firstList.size();
        int n = secondList.size();

        vector<vector<int>> result;

        while(i < m && j < n) {
            int start = max(firstList[i][0], secondList[j][0]); // start of an overlap range
            int end   = min(firstList[i][1], secondList[j][1]); // end of an overlap range

            if(start <= end) {
                result.push_back({start, end});
            }

            if(firstList[i][1] < secondList[j][1]) { // firstList ends before secondList so i need more space
                i++;
            }
            else {
                j++;
            }
        }

        return result;
    }
};
