class Solution {
public:
    int maxProduct(vector<int>& nums) {
        // kadane variation
        int n = nums.size();
        int prevMin   = nums[0]; 
        int prevMax   = nums[0]; 
        int globalMax = nums[0]; 
        int curMin    = nums[0]; 
        int curMax    = nums[0];

        for(int i = 1; i < n; i++){
            curMin = min({nums[i], prevMax * nums[i], prevMin * nums[i]});
            curMax = max({nums[i], prevMax * nums[i], prevMin * nums[i]});

            globalMax = max(globalMax, curMax);

            prevMin = curMin;
            prevMax = curMax; 
        } 

        return globalMax;
    }
};
