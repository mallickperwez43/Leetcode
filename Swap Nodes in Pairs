/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(head == NULL || head -> next == NULL){
            return head;
        }

        ListNode* curNode  = head;
        ListNode* nextNode = head -> next;

        while(curNode != NULL && nextNode != NULL){
            // swap values of curNode && nextNode
            int cur = curNode -> val;
            curNode -> val = nextNode -> val;
            nextNode -> val = cur;

            // move by two node
            curNode = curNode -> next != NULL ? curNode -> next -> next : NULL; 
            nextNode = nextNode -> next != NULL ? nextNode -> next -> next : NULL; 
        }

        return head;
    }
};
