class Solution {
public:
    int maximumLength(string s) {
        int n = s.length();

        vector<vector<int>> matrix(26, vector<int>(n + 1, 0)); // matrix[i][j] = matrix[char][len]   

        char prevCh = s[0];
        int len = 0;

        for(int i = 0; i < n; i++){
            char curCh = s[i];

            if(prevCh == curCh){
                len += 1;
                matrix[curCh - 'a'][len] += 1;
            }
            else{
                len = 1;
                matrix[curCh - 'a'][len] += 1;
                prevCh = curCh;
            }    
        }

        int result = 0;

        for(int i = 0; i < 26; i++){
            int cumSum = 0;
            for(int j = n; j >= 1; j--){
                cumSum += matrix[i][j];

                if(cumSum >= 3){
                    result = max(result, j);
                    break;
                }
            }
        }

        return result == 0 ? -1 : result;
    }
};
