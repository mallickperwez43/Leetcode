// SAME AS PART 1

class Solution {
public:
    int numberOfPairs(vector<vector<int>>& points) {
        int n = points.size();
        int result = 0;

        sort(points.begin(), points.end(), [&](vector<int> p1, vector<int> p2){
            if(p1[0] == p2[0]) {
                return p1[1] > p2[1];
            }

            return p1[0] < p2[0];
        });

        for(int i = 0; i < n; i++) {
            // A - Upper left point for Alice
            int x1 = points[i][0];
            int y1 = points[i][1];

            int maxY = INT_MIN;

            // Find B - Find lower right point for Bob
            for(int j = i + 1; j < n; j++) {

                int x2 = points[j][0];
                int y2 = points[j][1];

                if(y2 > y1) { // B point A se uper hogaya
                    continue;
                }

                if(y2 > maxY) {
                    result++;
                    maxY = y2;
                }
            }
        }

        return result;
    }
};

// TC : O(nlogn + n^2)
// SC : O(1)
