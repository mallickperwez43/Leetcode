// Way 1

class Solution {
public:
    long long zeroFilledSubarray(vector<int>& nums) {
        long long result = 0;
        int n = nums.size();     
        int i = 0;
        while(i < n) {
            long long len = 0;

            if(nums[i] == 0) {
                while(i < n && nums[i] == 0) {
                    i++;
                    len++;
                }
            }
            else {
                i++;
            }

            result += (len) * (len + 1) / 2;
        }

        return result;
    }
};


// Way 2 -> CLEANER

class Solution {
public:
    long long zeroFilledSubarray(vector<int>& nums) {
        long long result = 0;
        
        int n = nums.size();   

        int count = 0;
        for(int i = 0; i < n; i++) {
            nums[i] == 0 ? count++ : count = 0;

            result += count;
        }

        return result;
    }
};
