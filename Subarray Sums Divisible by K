class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        int n = nums.size();

        unordered_map<int, int> mp; // prev seen remainder -> freq
        
        int prefixSum = 0;
        mp[prefixSum] = 1; // mp[0] = 1;

        int result = 0;

        for(int& num : nums) {
            prefixSum += num;

            int rem = prefixSum % k;

            if(rem < 0) {
                rem += k;
            }

            if(mp.find(rem) != mp.end()) {
                result += mp[rem];
            }

            mp[rem]++;
        }

        return result;
    }
};
