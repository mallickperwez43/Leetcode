// STL -> any_of()

class Solution {
public:
    vector<int> findWordsContaining(vector<string>& words, char x) {
        int n = words.size();
        vector<int> result;
        
        auto lamda = [&](char ch) {
            return ch == x;
        };

        for(int i = 0; i < n; i++) {
            if(any_of(words[i].begin(), words[i].end(), lamda)) {
                result.push_back(i);
            }
        }

        return result;
    }
};


// STL -> find()

class Solution {
public:
    vector<int> findWordsContaining(vector<string>& words, char x) {
        int n = words.size();
        vector<int> result;
    
        for(int i = 0; i < n; i++) {
            if(words[i].find(x) != string :: npos) {
                result.push_back(i);
            }
        }

        return result;
    }
};
