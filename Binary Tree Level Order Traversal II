/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> ans;
        if(root == NULL){
            return ans;
        }

        queue<TreeNode*> q;
        q.push(root);

        while(!q.empty()){
            int size = q.size();
            vector<int> levelNodes;

            while(size--){
                TreeNode* curNode = q.front();
                q.pop();

                levelNodes.push_back(curNode -> val);

                if(curNode -> left){
                    q.push(curNode -> left);
                }
                if(curNode -> right){
                    q.push(curNode -> right);
                }
            }

            ans.push_back(levelNodes);
        }

        int i = 0;
        int j = ans.size() - 1;

        while(i < j){
            swap(ans[i], ans[j]);
            i++;
            j--;
        }

        return ans;
    }
};
