class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        unordered_set<char> rows[9];
        unordered_set<char> cols[9];
        unordered_set<char> innerBoard[9];
          
        for(int r = 0; r < 9; r++){
            for(int c = 0; c < 9; c++){
                // we dont needed the empty ones
                if(board[r][c] == '.'){
                    continue;
                }

                // get value and the innerIndex
                char val = board[r][c];
                int innerBoxIdx = (r / 3) * 3 + (c / 3);

                // check if already present that false
                if(rows[r].count(val) || cols[c].count(val) || innerBoard[innerBoxIdx].count(val)){
                    return false;
                }

                // insert it if its unique
                rows[r].insert(val);
                cols[c].insert(val);
                innerBoard[innerBoxIdx].insert(val);
            }
        }

        return true;
    }
};
