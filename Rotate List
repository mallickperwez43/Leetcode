/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == NULL){
            return head;
        }

        // Find length of List and last Node
        ListNode* tail = head;
        int length = 1;
        while(tail -> next){
            tail = tail -> next;
            length++;
        }

        // Make circular 
        tail -> next = head;

        // Find new head and effective rotations
        k = k % length;
        int steps = length - k;
        
        while(steps--){
            tail = tail -> next;
        }

        // Break cycle and make newHead
        ListNode* newHead = tail -> next;
        tail -> next = NULL;

        return newHead;
    }
};
