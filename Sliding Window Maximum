class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int n = nums.size();

        vector<int> ans;
        deque<int> deq; // to store indexes of the max element in a window of size

        for(int i = 0; i < n; i++){
            // shrink
            if(!deq.empty() && deq.front() == i - k){
                deq.pop_front();
            }

            // no use of keeping the smaller elements if a greater is found
            while(!deq.empty() && nums[deq.back()] < nums[i]){
                deq.pop_back();
            }

            // push current index
            deq.push_back(i);

            // if reached a k size window
            if(i >= k - 1){
                ans.push_back(nums[deq.front()]);
            }
        }

        return ans;
    }
};
