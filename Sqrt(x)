long long int binarySearch(int n)
{
        int start = 0;
        int end = n;
         
        long long int mid = start + (end - start) / 2;
    
        long long int ans = -1;
        while(start <= end)
        {
            long long int square = mid * mid; // agar int mid leta to agar mid int max pr hota toh
    
            // matching condition
            if(square == n)
            {
                return mid;
            }

            // agar square chota hua to ans store krlo
            if(square < n)
            {
                ans = mid;
                start = mid + 1;
            }
            else  
            {
                end = mid - 1;
            }

            mid = start + (end - start) / 2;
        }
        return ans;
}
class Solution {
public:
        int mySqrt(int x) {
        return binarySearch(x);
    }
};
