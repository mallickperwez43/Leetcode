/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    ListNode* reverseLL(ListNode* head) {
        if(head == NULL || head -> next == NULL)
            return head;
        
        ListNode* prev  = NULL;
        ListNode* curr  = head;
        ListNode* ahead = NULL;
        
        while(curr != NULL) {
            ahead = curr -> next;
            curr -> next = prev;
            prev = curr;
            curr = ahead;
        }

        return prev;
    }

    int getDecimalValue(ListNode* head) {
        head = reverseLL(head);

        int result = 0;
        int power = 0;

        while(head != NULL) {
            if(head -> val == 1)
                result += (pow(2, power));
            
            head = head -> next;
            power++;
        }

        return result;
    }
};


// Method 2 - Bit Manipulation

class Solution {
public:
    int getDecimalValue(ListNode* head) {
        int result = 0;

        while(head != NULL) {
            result = (result << 1) | (head -> val);
            head = head -> next;
        }

        return result;
    }
};
