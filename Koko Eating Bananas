class Solution {
public:
    
    bool canEat(vector<int>& piles, long long h, int mid) {
        long long actualTimeInHours = 0;

        for(int& num : piles) {
            actualTimeInHours += (num + mid - 1) / mid; // ceil
        }

        return actualTimeInHours <= h;
    }

    int minEatingSpeed(vector<int>& piles, int h) {
        int l = 1;
        int r = *max_element(piles.begin(), piles.end());

        int result = -1; // min no of bananas to be eaten per hour

        while(l <= r) {
            int mid = l + (r - l) / 2;

            if(canEat(piles, h, mid)) {
                result = mid; // koko can eat mid no of bananas per hour
                r = mid - 1;
            }
            else {
                l = mid + 1;
            }
        }

        return result;
    }
};
