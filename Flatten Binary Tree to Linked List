/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        if(root == NULL){
            return;
        }

        TreeNode* cur = root;

        while(cur != NULL){

            if(cur -> left != NULL){
                TreeNode* pred = cur -> left;

                while(pred -> right != NULL){ // going to the last last of the left subtree
                    pred = pred -> right;
                }

                // connnecting the left leaf node to the right subtree
                pred -> right = cur -> right; // connect the linkage
                cur -> right  = cur -> left;  // make LL 
                cur -> left   = NULL;         // break the left part
            }

            cur = cur -> right; // move right
        }
    }
};
