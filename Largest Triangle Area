// Heron's + Shoelace's Formula

class Solution {
public:
    double largestTriangleArea(vector<vector<int>>& points) {
        int n = points.size();
        double maxArea = 0.0;

        for(int i = 0; i <= n - 3; i++) {
            double x1 = points[i][0];
            double y1 = points[i][1];
            for(int j = i + 1; j <= n - 2; j++) {
                double x2 = points[j][0];
                double y2 = points[j][1];
                for(int k = j + 1; k <= n - 1; k++) {
                    double x3 = points[k][0];
                    double y3 = points[k][1];
                    
                    // Sides
                    double a = hypot(x2 - x1, y2 - y1); // sqrt((x2 - x1)^2 + (y2 - y1)^2);
                    double b = hypot(x2 - x3, y2 - y3); 
                    double c = hypot(x3 - x1, y3 - y1);

                    // SemiPerimeter 
                    double s = (a + b + c) * 0.5;

                    double heronArea = sqrt(s * (s - a) * (s - b) * (s - c));
                    
                    double shoelaceArea = 0.5 * abs(x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2));

                    maxArea = max({maxArea , heronArea, shoelaceArea});
                }
            }
        }

        return maxArea;
    }
};

// TC : O(n^3)
// SC : O(1)
