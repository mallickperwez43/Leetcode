class Solution {
public:
    void rotateRightByB(string& s, int b) {
        reverse(s.begin(), s.end());
        reverse(s.begin(), s.begin() + b);
        reverse(s.begin() + b, s.end());
    }

    string findLexSmallestString(string s, int a, int b) {
        string smallestString = s;
        
        unordered_set<string> visited;
        queue<string> que;
        que.push(s);
        visited.insert(s);

        while(!que.empty()) {
            string curr = que.front();
            que.pop();

            if(curr < smallestString) {
                smallestString = curr;
            }

            // Add a to odd indices of the digits
            string temp = curr;
            for(int i = 1; i < temp.length(); i += 2) {
                temp[i] = ((((temp[i] - '0') + a) % 10) + '0');
            }

            if(!visited.count(temp)) {
                que.push(temp);
                visited.insert(temp);
            }

            // Rotate string right by b
            rotateRightByB(curr, b);
            if(!visited.count(curr)) {
                que.push(curr);
                visited.insert(curr);
            }
        }

        return smallestString;
    }
};
